apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: nodejs-template
  title: Nodejs Service
  description: Create a Nodejs Hello World Application

  tags:
    - nodejs
    - recommended
    - service
    - component
spec:
  owner: group:sre-team
  type: component
  parameters:
    - title: Provide some simple information
      required:
        - component_id
        - owner
        - app
        - port
        - host-development
        - host-staging
        - host-production
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
        app:
          title: Application Name
          type: string
          description: Unique name of the application
        port:
          title: Port
          type: number
          description: The port app listens on
        # registry:
        #   title: Registry
        #   type: string
        #   description: Hostname of the registry of the app image
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKind:
              - Users
        hostDevelopment:
          title: Development hostname
          type: string
          description: Application hostname on the development environment
        hostStaging:
          title: Staging hostname
          type: string
          description: Application hostname on the staging environment
        hostProduction:
          title: Production hostname
          type: string
          description: Application hostname on the production environment
        gitOwner:
          title: Git Owner
          type: string
          description: Repo Organization or accout
          enum:
            - GMSOPS
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ../skeleton/nest-app
        targetPath: ./app
        values:
          app: ${{ parameters.app }}
          port: ${{ parameters.port }}
          registry: harbor.mgmt.neotechsolutions.org

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com
        sourcePath: ./app
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main
    
    - action: http:backstage:request
      id: http-request
      name: Create a thing on the acme service
      input:
        method: POST
        path: "/api/proxy/test/662beb90-f4ee-4cc2-ac3d-3ed0cf9feb39"
        headers:
          'Content-Type': 'application/json'
        body:
          thingname: 'foo'

    - id: template-infra
      name: Fetch Skeleton + Infra Template
      action: fetch:template
      input:
        url: ../skeleton/infrastructure
        targetPath: ./infra
        values:
          gitOwner: ${{ parameters.gitOwner }}
          app: ${{ parameters.app }}
          port: ${{ parameters.port }}
          registry: harbor.mgmt.neotechsolutions.org
          hostDevelopment: ${{ parameters.hostDevelopment }}
          hostStaging: ${{ parameters.hostStaging }}
          hostProduction: ${{ parameters.hostProduction }}
          developmentApiServerUrl: https://dev-apiserver.com:6443
          stagingApiServerUrl: https://staging-apiserver.com:6443
          productionApiServerUrl: https://production-apiserver.com:6443
    - id: publish-infra
      name: Publish
      action: publish:github
      input:
        sourcePath: ./infra
        allowedHosts:
          - github.com
        description: This is ${{ parameters.component_id }}-infrastructure
        repoUrl: ${{ parameters.repoUrl }}-infrastructure
        defaultBranch: main

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        #catalogInfoPath: "/catalog-info.yaml"
        optional: false

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Infrastructure Repository
        url: ${{ steps.publish.output-infra.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
