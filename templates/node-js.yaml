apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: nodejs-template
  title: Nodejs Service
  description: Create a Nodejs Hello World Application

  tags:
    - nodejs
    - recommended
    - service
    - component
spec:
  owner: group:sre-team
  type: component
  parameters:
    - title: Provide some simple information
      required:
        - component_id
        - owner
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: https://github.com/GMSOPS/NestJSApp
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}


    - id: create-catalog
      action: catalog:write   
      name: Create catalog file
      input:
        entity:
          apiVersion: backstage.io/v1alpha1
          kind: Component
          metadata:
            name: ${{ parameters.component_id }}
            annotations: {}
            #   backstage.io/techdocs-ref: ${{ { steps.publish.output.repoContentsUrl }}/README.md
            # links:
            #   - url: https://admin.example-org.com
            #     title: Staging url
            #     icon: dashboard
            #     type: admin-dashboard
          spec:
            type: service
            lifecycle: production
            owner: ${{ parameters.owner }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        #catalogInfoPath: "/catalog-info.yaml"
        optional: false
    
    - action: http:backstage:request
      id: http-request
      name: Create a thing on the acme service
      input:
        method: POST
        path: "/api/proxy/test/662beb90-f4ee-4cc2-ac3d-3ed0cf9feb39"
        headers:
          'Content-Type': 'application/json'
        body:
          thingname: 'foo'

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
