apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: nodejs-template
  title: Nodejs Service
  description: Create a Nodejs Hello World Application

  tags:
    - nodejs
    - recommended
    - service
    - component
spec:
  owner: group:sre-team
  type: component
  parameters:
    - title: Provide some simple information
      required:
        - owner
        - app
        - port
        - domain
      properties:
        project:
          title: Project Name
          type: string
          description: Unique name of the project
          enum:
            - demo
        app:
          title: Application Name
          type: string
          description: Unique name of the application
          ui:field: EntityNamePicker
        port:
          title: Port
          type: number
          description: The port app listens on
        subdomain:
          title: App subdomain
          type: string
          description: <subdomain>.<domain> 
        domain:
          title: App domain name
          type: string
          description: Unique name of the project
          enum:
            - gms-ops.net
            - yourcoaching.io
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKind:
              - Users
        # hostDevelopment:
        #   title: Development hostname
        #   type: string
        #   description: Application hostname on the development environment
        # hostStaging:
        #   title: Staging hostname
        #   type: string
        #   description: Application hostname on the staging environment
        # hostProduction:
        #   title: Production hostname
        #   type: string
        #   description: Application hostname on the production environment
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ../skeleton/nest-app
        targetPath: ./app
        values:
          app: ${{ parameters.app }}
          port: ${{ parameters.port }}
          registry: harbor.mgmt.neotechsolutions.org

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com
        sourcePath: ./app
        description: This is ${{ parameters.app }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main

    - id: template-infra
      name: Fetch Skeleton + Infra Template
      action: fetch:template
      input:
        url: ../skeleton/infrastructure # 
        targetPath: ./infra
        values:
          project: ${{ parameters.project }}
          app: ${{ parameters.app }}
          port: ${{ parameters.port }}
          registry: harbor.mgmt.neotechsolutions.org
          repoUrl: ${{ steps.publish.output.remoteUrl | slice(-4) }}-infrastructure
          hostDevelopment: ${{ parameters.app }}-${{ parameters.project }}-dev.${{ parameters.domain }}
          hostStaging: ${{ parameters.app }}-${{ parameters.project }}-stg.${{ parameters.domain }}
          # hostDevelopment: ${{ parameters.subdomain }}-dev.${{ parameters.domain }} # *.dev.yourcoaching.io && dev.yourcoaching.io
          # hostStaging: ${{ parameters.subdomain }}-stg.${{ parameters.domain }} # *.stg.yourcoaching.io && stg.yourcoaching.io
          hostProduction: ${{ parameters.app }}-${{ parameters.project }}.${{ parameters.domain }} 
          # hostProduction: ${{ parameters.subdomain }}.${{ parameters.domain }} *.yourcoaching.io && yourcoaching.io
          # hostProduction: ${{ parameters.hostProduction }} -- 
          developmentApiServerUrl: https://dev-apiserver.com:6443
          stagingApiServerUrl: https://gddfb47dgd.kubermatic.mgmt.neotechsolutions.org:31075
          productionApiServerUrl: https://w4rpzvhgnt.kubermatic.mgmt.neotechsolutions.org:31886
    - id: publish_infra
      name: Publish
      action: publish:github
      input:
        sourcePath: ./infra
        allowedHosts:
          - github.com
        description: This is ${{ parameters.app }}-infrastructure
        repoUrl: ${{ parameters.repoUrl }}-infrastructure
        defaultBranch: main

    - action: http:backstage:request
      id: run-workflow
      name: Run bootstrap workflow
      input:
        method: POST
        path: "/api/proxy/workflow/webhook/app-bootstrap"
        body:
          project: ${{ parameters.project }}
          app: ${{ parameters.app }}
          registry: harbor.mgmt.neotechsolutions.org
          repo: ${{ steps.publish.output.remoteUrl | slice(-4) }}
          infrastructure-repo: ${{ steps.publish_infra.output.remoteUrl | slice(-4) }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        #catalogInfoPath: "/catalog-info.yaml"
        optional: false

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl | slice(-4) }}
      - title: Infrastructure Repository
        url: ${{ steps.publish_infra.output.remoteUrl | slice(-4) }}
      - title: Development link
        url: ${{ parameters.app }}-${{ parameters.project }}.dev.${{ parameters.domain }}
      - title: Staging link
        url: ${{ parameters.app }}-${{ parameters.project }}.stg.${{ parameters.domain }}
      - title: Production link
        url: ${{ parameters.app }}-${{ parameters.project }}.${{ parameters.domain }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
